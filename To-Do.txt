* Tasks 
  General NOTE:
  - Double check email addresses
  - When send request for PATCHvX add a summary of the things that changed
  - Keep comments less than 80 chars
  - Have script questions ask mentor
  - Keep a log of all the changes in my system and report possible bugs
  - Prof read everything before sending it [ A lot of miss spellings DUDE! ]

** :patch:accepted: remove unused-kernel-patches line #114 Makefile
*** DONE send patch
    NOTE: No longer needed.  

** TODO CONFIG_MODULE_COMPRESS
*** TODO Build and install kernel with CONFIG_MODULE_COMPRESS
    CONFIG_MODULE_COMPRESS=y [config-generic]
    zipmodules=0             [kernel.spec]
    
    NOTE: Building fails 
          sed: can't read /home/masteroshi/rpmbuild/BUILDROOT/kernel-4.7.0-0.rc7.git4.1.module_compression.fc25.x86_64/k-d.list
	 
*** TODO use upstream module compression instead of fedora's

** TODO create script to double check generated config

   NOTE: config files are in config directory. The correct config files is use
   depending on the target architecture the kernel is being compiled for.
   
   ~/kernel/kernel-4.6.fc25/linux-4.7.0-0.rc4.git1.1.local.fc25.x86_64/configs/
   
   https://bugzilla.redhat.com/show_bug.cgi?id=1347454
   
** DONE Remove old scripts

*** :patch:accepted: bumspecfile.py
    
    NOTE: pythong script that changes the version and revision number of the specfile.
    This script is no longer in use. Use rpmdev-bumspecfile instead.

*** :patch:accepted: rediffall.sh

    NOTE: old script used by previous maintainers 
    
*** :patch:accepted: allarchconfig
    
    NOTE: The functionality of this script is already in kernel.spec

    
** DONE Fix scripts

*** :analysing: sort-config 
**** :low_priority: TODO Try to fix it

    NOTE: Not making much progress here

*** :patch:accepted: grab-logs.sh
**** DONE [PATCHv2] FIX wget warning and save logs to log directory if already present.

    NOTE: Download the logs from koji server

*** :patch:accepted: generate-git-snapshot.sh
**** DONE [PATCHv2] FIX Comments bigger than 80 characters in length.

    NOTE: Generates a git snapshot between upstream git tree and fedora's tree.

    
** TODO New Scripts 

*** :patch:in_review: newpatch.sh
**** DONE [PATCHv2] FIX not being able to run the script from any where
**** DONE [PATCHv2] Check for number of arguments rather than specific case
**** DONE [PATCHv2] Do not use rpmdev-bumspecfile instead change defineid macro
**** DONE [PATCHv2] check test for checking if a patch is in the current tree
**** DONE [PATCHv3] patches cannot have "-" to be used as buildid
**** DONE [PATCHv4] use cp instead of mv
**** DONE [PATCHV4] change the newpatch already in tree, do not create a new one

    NOTE: script will be used to add a new patch to the tree. It should take the path 
    of the patch and add it to the tree. The script also needs to add the patch to 
    kernel.spec and change the macro # defineid local to the patch name.
   
    eg. ./newpatch path/to/patch description

*** :patch:accepted: fast-build.sh
**** DONE Submit patch to delete fast-x86_64
**** DONE FIX unclear comment description [ Fixed by Laura ]

    NOTE: Allows for the compilation of a custom kernel with the bare minimum.
    The script takes an architecture and source rpm package as argument.
   
    eg. ./fast-build.sh x86_64 kernel-X.X.X.src.rpm

*** :patch:in_review: check-patchlist.sh
**** DONE [PATCHv2] Highlight patches accordingly when use flag -s -p
**** DONE [PATCHv2] Add another a character identifier instead of color, not all terminals support color
**** TODO [PATCHv3] change characters to +, -, .
**** TODO [PATCHv3] Fix logic
 
     NOTE: Highlights patches that are tracked in PatchList.txt and the

*** :patch:in_review: generate-perf-man.sh
**** DONE [PATCHv4] Delete unnecessary comments
**** DONE [PATCHv4] Instead of prompt use a flag eg. generate-perf-man.sh --version=x.y
**** DONE [PATCHv5] FORGOT to define usage!

     NOTE: Helps generate the perf-man tarball

*** :buggy: test-rpmbuilds
**** TODO Log the result of each build
**** TODO Create log files per build combo with result and time it took to compile

    NOTE: helps with the testing of all the rpmbuild combinations to compile a custom kernel.
 	   

   
** DONE Test rpmbuild combos
*** DONE send summary to Laura    
*** NOTE:
**** :successful: rpmbuild --target x86_64 --without debuginfo --without perf --without tools 
**** :successful: rpmbuild --target x86_64 --without debuginfo --with perf --with tools 
**** :successful: rpmbuild --target x86_64 --without debuginfo --without perf --with tools 
**** :successful: rpmbuild --target x86_64 --without debuginfo --with perf --without tools 
**** :successful: rpmbuild --target x86_64 --with debuginfo --with perf --with tools
**** :successful: rpmbuild --target x86_64 --with debuginfo --with perf --without tools
**** :successful: rpmbuild --target x86_64 --with debuginfo --without perf --with tools
**** :successful: rpmbuild --target x86_64 --without debug --without debuginfo --without perf --without perf --without tools
**** :successful: rpmbuild --target x86_64 --without bootwrapper --without debug --without debuginfo --without perf --without tools 
**** :successful: rpmbuild --target x86_64 --without vdso --without bootwrapper --without debug --without debuginfo --without perf --without tools  
**** :successful: rpmbuild --target x86_64 --with pae --without vdso --without bootwrapper --without debug --without debuginfo --without perf --without tools
**** :successful: rpmbuild --target x86_64 --with baseonly --without vdso --without bootwrapper --without debug --without debuginfo --without perf --without tools
**** :successful: rpmbuild --target x86_64 --with paeonly --without bootwrapper --without debug --without debuginfo --without perf --without tools
**** :successful: rpmbuild --target x86_64 --with dbonly --without bootwrapper --without debug --without debuginfo --without perf --without tools
**** :successful: rpmbuild --target x86_64 --with sparce --without bootwrapper --without debug --without debuginfo --without perf --without tool 
**** :successful: rpmbuild --target x86_64 --with cross --without bootwrapper --without debug --without debuginfo --without perf --without tools
**** :successful: rpmbuild --target x86_64 --with vanilla --without vdso --without bootwrapper --without debug --without debuginfo --without perf --without tools
**** :successful: rpmbuild --target x86_64 --with baseonly
**** :successful: rpmbuild --target x86_64 --with paeonly
**** :successful: rpmbuild --target x86_64 --with dbgonly
**** :successful: rpmbuild --target x86_64 --with sparse
**** :successful: rpmbuild --target x86_64 --with cross
**** :successful: rpmbuild --target x86_64 --with release
**** :successful: rpmbuild --target x86_64 --with vanilla

** Other/ Misc
*** DONE Blog post week 4 [ week 3 ]
    NOTE: Prof read and publish
*** DONE Check Fedora Project blog configuration
    NOTE: Everything looks good
*** DONE Blog post week 5 [ week 4 ]
    NOTE: DevNation

    NOTE: updates did not get published?
*** TODO Blog post week 6 [ week 5 ]

*** TODO Blog post week 7 [ week 6 ] 
   
